{"ast":null,"code":"import _classCallCheck from \"/home/canocalir/grcwebsite/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/canocalir/grcwebsite/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/canocalir/grcwebsite/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/canocalir/grcwebsite/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/canocalir/grcwebsite/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/canocalir/grcwebsite/src/components/Navbar/Navbar.jsx\";\nimport React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport './Navbar.scss';\nimport logo from \"./grc-logo.svg\";\nimport $ from 'jquery';\nimport { Link } from 'react-router-dom';\n\nvar GrcNavbar =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(GrcNavbar, _Component);\n\n  function GrcNavbar() {\n    _classCallCheck(this, GrcNavbar);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(GrcNavbar).apply(this, arguments));\n  }\n\n  _createClass(GrcNavbar, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      \"use strict\";\n\n      $(document).ready(function ($) {\n        function morphDropdown(element) {\n          this.element = element;\n          this.mainNavigation = this.element.find('.main-nav');\n          this.mainNavigationItems = this.mainNavigation.find('.has-dropdown');\n          this.dropdownList = this.element.find('.dropdown-list');\n          this.dropdownWrappers = this.dropdownList.find('.dropdown');\n          this.dropdownItems = this.dropdownList.find('.content');\n          this.dropdownBg = this.dropdownList.find('.bg-layer');\n          this.mq = this.checkMq();\n          this.bindEvents();\n        }\n\n        morphDropdown.prototype.checkMq = function () {\n          //check screen size\n          var self = this;\n          return window.getComputedStyle(self.element.get(0), '::before').getPropertyValue('content').replace(/'/g, \"\").replace(/\"/g, \"\").split(', ');\n        };\n\n        morphDropdown.prototype.bindEvents = function () {\n          var self = this; //hover over an item in the main navigation\n\n          this.mainNavigationItems.mouseenter(function (event) {\n            //hover over one of the nav items -> show dropdown\n            self.showDropdown($(this));\n          }).mouseleave(function () {\n            setTimeout(function () {\n              //if not hovering over a nav item or a dropdown -> hide dropdown\n              if (self.mainNavigation.find('.has-dropdown:hover').length == 0 && self.element.find('.dropdown-list:hover').length == 0) self.hideDropdown();\n            }, 50);\n          }); //hover over the dropdown\n\n          this.dropdownList.mouseleave(function () {\n            setTimeout(function () {\n              //if not hovering over a dropdown or a nav item -> hide dropdown\n              self.mainNavigation.find('.has-dropdown:hover').length == 0 && self.element.find('.dropdown-list:hover').length == 0 && self.hideDropdown();\n            }, 50);\n          }); //click on an item in the main navigation -> open a dropdown on a touch device\n\n          this.mainNavigationItems.on('touchstart', function (event) {\n            var selectedDropdown = self.dropdownList.find('#' + $(this).data('content'));\n\n            if (!self.element.hasClass('is-dropdown-visible') || !selectedDropdown.hasClass('active')) {\n              event.preventDefault();\n              self.showDropdown($(this));\n            }\n          }); //on small screens, open navigation clicking on the menu icon\n\n          this.element.on('click', '.nav-trigger', function (event) {\n            event.preventDefault();\n            self.element.toggleClass('nav-open');\n          });\n        };\n\n        morphDropdown.prototype.showDropdown = function (item) {\n          this.mq = this.checkMq();\n\n          if (this.mq == 'desktop') {\n            var self = this;\n            var selectedDropdown = this.dropdownList.find('#' + item.data('content')),\n                selectedDropdownHeight = selectedDropdown.innerHeight(),\n                selectedDropdownWidth = selectedDropdown.children('.content').innerWidth(),\n                selectedDropdownLeft = item.offset().left + item.innerWidth() / 2 - selectedDropdownWidth / 2; //update dropdown position and size\n\n            this.updateDropdown(selectedDropdown, parseInt(selectedDropdownHeight), selectedDropdownWidth, parseInt(selectedDropdownLeft)); //add active class to the proper dropdown item\n\n            this.element.find('.active').removeClass('active');\n            selectedDropdown.addClass('active').removeClass('move-left move-right').prevAll().addClass('move-left').end().nextAll().addClass('move-right');\n            item.addClass('active'); //show the dropdown wrapper if not visible yet\n\n            if (!this.element.hasClass('is-dropdown-visible')) {\n              setTimeout(function () {\n                self.element.addClass('is-dropdown-visible');\n              }, 10);\n            }\n          }\n        };\n\n        morphDropdown.prototype.updateDropdown = function (dropdownItem, height, width, left) {\n          this.dropdownList.css({\n            '-moz-transform': 'translateX(' + left + 'px)',\n            '-webkit-transform': 'translateX(' + left + 'px)',\n            '-ms-transform': 'translateX(' + left + 'px)',\n            '-o-transform': 'translateX(' + left + 'px)',\n            'transform': 'translateX(' + left + 'px)',\n            'width': width + 'px',\n            'height': height + 'px'\n          });\n          this.dropdownBg.css({\n            '-moz-transform': 'scaleX(' + width + ') scaleY(' + height + ')',\n            '-webkit-transform': 'scaleX(' + width + ') scaleY(' + height + ')',\n            '-ms-transform': 'scaleX(' + width + ') scaleY(' + height + ')',\n            '-o-transform': 'scaleX(' + width + ') scaleY(' + height + ')',\n            'transform': 'scaleX(' + width + ') scaleY(' + height + ')'\n          });\n        };\n\n        morphDropdown.prototype.hideDropdown = function () {\n          this.mq = this.checkMq();\n\n          if (this.mq == 'desktop') {\n            this.element.removeClass('is-dropdown-visible').find('.active').removeClass('active').end().find('.move-left').removeClass('move-left').end().find('.move-right').removeClass('move-right');\n          }\n        };\n\n        morphDropdown.prototype.resetDropdown = function () {\n          this.mq = this.checkMq();\n\n          if (this.mq == 'mobile') {\n            this.dropdownList.removeAttr('style');\n          }\n        };\n\n        var morphDropdowns = [];\n\n        if ($('.morph-dropdown').length > 0) {\n          var updateDropdownPosition = function updateDropdownPosition() {\n            morphDropdowns.forEach(function (element) {\n              element.resetDropdown();\n            });\n            resizing = false;\n          };\n\n          $('.morph-dropdown').each(function () {\n            //create a morphDropdown object for each .morph-dropdown\n            morphDropdowns.push(new morphDropdown($(this)));\n          });\n          var resizing = false; //on resize, reset dropdown style property\n\n          updateDropdownPosition();\n          $(window).on('resize', function () {\n            if (!resizing) {\n              resizing = true;\n              !window.requestAnimationFrame ? setTimeout(updateDropdownPosition, 300) : window.requestAnimationFrame(updateDropdownPosition);\n            }\n          });\n          ;\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return GrcNavbar;\n}(Component);\n\nexport { GrcNavbar as default };","map":{"version":3,"sources":["/home/canocalir/grcwebsite/src/components/Navbar/Navbar.jsx"],"names":["React","Component","ReactDOM","$","Link","GrcNavbar","document","ready","morphDropdown","element","mainNavigation","find","mainNavigationItems","dropdownList","dropdownWrappers","dropdownItems","dropdownBg","mq","checkMq","bindEvents","prototype","self","window","getComputedStyle","get","getPropertyValue","replace","split","mouseenter","event","showDropdown","mouseleave","setTimeout","length","hideDropdown","on","selectedDropdown","data","hasClass","preventDefault","toggleClass","item","selectedDropdownHeight","innerHeight","selectedDropdownWidth","children","innerWidth","selectedDropdownLeft","offset","left","updateDropdown","parseInt","removeClass","addClass","prevAll","end","nextAll","dropdownItem","height","width","css","resetDropdown","removeAttr","morphDropdowns","updateDropdownPosition","forEach","resizing","each","push","requestAnimationFrame"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport './Navbar.scss';\nimport logo from './grc-logo.svg';\nimport $ from 'jquery';\n\nimport { Link } from 'react-router-dom';\n\nexport default class GrcNavbar extends Component {\n  componentDidMount () {\n    \"use strict\";\n\n$(document).ready(function ($) {\n  function morphDropdown(element) {\n    this.element = element;\n    this.mainNavigation = this.element.find('.main-nav');\n    this.mainNavigationItems = this.mainNavigation.find('.has-dropdown');\n    this.dropdownList = this.element.find('.dropdown-list');\n    this.dropdownWrappers = this.dropdownList.find('.dropdown');\n    this.dropdownItems = this.dropdownList.find('.content');\n    this.dropdownBg = this.dropdownList.find('.bg-layer');\n    this.mq = this.checkMq();\n    this.bindEvents();\n  }\n\n  morphDropdown.prototype.checkMq = function () {\n    //check screen size\n    var self = this;\n    return window.getComputedStyle(self.element.get(0), '::before').getPropertyValue('content').replace(/'/g, \"\").replace(/\"/g, \"\").split(', ');\n  };\n\n  morphDropdown.prototype.bindEvents = function () {\n    var self = this; //hover over an item in the main navigation\n\n    this.mainNavigationItems.mouseenter(function (event) {\n      //hover over one of the nav items -> show dropdown\n      self.showDropdown($(this));\n    }).mouseleave(function () {\n      setTimeout(function () {\n        //if not hovering over a nav item or a dropdown -> hide dropdown\n        if (self.mainNavigation.find('.has-dropdown:hover').length == 0 && self.element.find('.dropdown-list:hover').length == 0) self.hideDropdown();\n      }, 50);\n    }); //hover over the dropdown\n\n    this.dropdownList.mouseleave(function () {\n      setTimeout(function () {\n        //if not hovering over a dropdown or a nav item -> hide dropdown\n        self.mainNavigation.find('.has-dropdown:hover').length == 0 && self.element.find('.dropdown-list:hover').length == 0 && self.hideDropdown();\n      }, 50);\n    }); //click on an item in the main navigation -> open a dropdown on a touch device\n\n    this.mainNavigationItems.on('touchstart', function (event) {\n      var selectedDropdown = self.dropdownList.find('#' + $(this).data('content'));\n\n      if (!self.element.hasClass('is-dropdown-visible') || !selectedDropdown.hasClass('active')) {\n        event.preventDefault();\n        self.showDropdown($(this));\n      }\n    }); //on small screens, open navigation clicking on the menu icon\n\n    this.element.on('click', '.nav-trigger', function (event) {\n      event.preventDefault();\n      self.element.toggleClass('nav-open');\n    });\n  };\n\n  morphDropdown.prototype.showDropdown = function (item) {\n    this.mq = this.checkMq();\n\n    if (this.mq == 'desktop') {\n      var self = this;\n      var selectedDropdown = this.dropdownList.find('#' + item.data('content')),\n          selectedDropdownHeight = selectedDropdown.innerHeight(),\n          selectedDropdownWidth = selectedDropdown.children('.content').innerWidth(),\n          selectedDropdownLeft = item.offset().left + item.innerWidth() / 2 - selectedDropdownWidth / 2; //update dropdown position and size\n\n      this.updateDropdown(selectedDropdown, parseInt(selectedDropdownHeight), selectedDropdownWidth, parseInt(selectedDropdownLeft)); //add active class to the proper dropdown item\n\n      this.element.find('.active').removeClass('active');\n      selectedDropdown.addClass('active').removeClass('move-left move-right').prevAll().addClass('move-left').end().nextAll().addClass('move-right');\n      item.addClass('active'); //show the dropdown wrapper if not visible yet\n\n      if (!this.element.hasClass('is-dropdown-visible')) {\n        setTimeout(function () {\n          self.element.addClass('is-dropdown-visible');\n        }, 10);\n      }\n    }\n  };\n\n  morphDropdown.prototype.updateDropdown = function (dropdownItem, height, width, left) {\n    this.dropdownList.css({\n      '-moz-transform': 'translateX(' + left + 'px)',\n      '-webkit-transform': 'translateX(' + left + 'px)',\n      '-ms-transform': 'translateX(' + left + 'px)',\n      '-o-transform': 'translateX(' + left + 'px)',\n      'transform': 'translateX(' + left + 'px)',\n      'width': width + 'px',\n      'height': height + 'px'\n    });\n    this.dropdownBg.css({\n      '-moz-transform': 'scaleX(' + width + ') scaleY(' + height + ')',\n      '-webkit-transform': 'scaleX(' + width + ') scaleY(' + height + ')',\n      '-ms-transform': 'scaleX(' + width + ') scaleY(' + height + ')',\n      '-o-transform': 'scaleX(' + width + ') scaleY(' + height + ')',\n      'transform': 'scaleX(' + width + ') scaleY(' + height + ')'\n    });\n  };\n\n  morphDropdown.prototype.hideDropdown = function () {\n    this.mq = this.checkMq();\n\n    if (this.mq == 'desktop') {\n      this.element.removeClass('is-dropdown-visible').find('.active').removeClass('active').end().find('.move-left').removeClass('move-left').end().find('.move-right').removeClass('move-right');\n    }\n  };\n\n  morphDropdown.prototype.resetDropdown = function () {\n    this.mq = this.checkMq();\n\n    if (this.mq == 'mobile') {\n      this.dropdownList.removeAttr('style');\n    }\n  };\n\n  var morphDropdowns = [];\n\n  if ($('.morph-dropdown').length > 0) {\n    var updateDropdownPosition = function updateDropdownPosition() {\n      morphDropdowns.forEach(function (element) {\n        element.resetDropdown();\n      });\n      resizing = false;\n    };\n\n    $('.morph-dropdown').each(function () {\n      //create a morphDropdown object for each .morph-dropdown\n      morphDropdowns.push(new morphDropdown($(this)));\n    });\n    var resizing = false; //on resize, reset dropdown style property\n\n    updateDropdownPosition();\n    $(window).on('resize', function () {\n      if (!resizing) {\n        resizing = true;\n        !window.requestAnimationFrame ? setTimeout(updateDropdownPosition, 300) : window.requestAnimationFrame(updateDropdownPosition);\n      }\n    });\n    ;\n  }\n});\n  }\n  render() {\n    return (\n      <div>\n        \n      </div>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}