{"ast":null,"code":"/*\nPlugin: jQuery Parallax\nVersion 1.1.3\nAuthor: Ian Lunn\nTwitter: @IanLunn\nAuthor URL: http://www.ianlunn.co.uk/\nPlugin URL: http://www.ianlunn.co.uk/plugins/jquery-parallax/\n\nDual licensed under the MIT and GPL licenses:\nhttp://www.opensource.org/licenses/mit-license.php\nhttp://www.gnu.org/licenses/gpl.html\n*/\n(function (root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    define(['jquery'], factory);\n  } else if (typeof module === 'object' && module.exports) {\n    factory(require('jquery'));\n  } else {\n    factory(root.jQuery);\n  }\n})(this, function ($) {\n  var $window = $(window);\n  var windowHeight = $window.height();\n  $window.resize(function () {\n    windowHeight = $window.height();\n  });\n\n  $.fn.parallax = function (xpos, speedFactor, outerHeight) {\n    var $this = $(this);\n    var getHeight;\n    var firstTop;\n    var paddingTop = 0; //get the starting position of each element to have parallax applied to it\t\t\n\n    $this.each(function () {\n      firstTop = $this.offset().top;\n    });\n\n    if (outerHeight) {\n      getHeight = function getHeight(jqo) {\n        return jqo.outerHeight(true);\n      };\n    } else {\n      getHeight = function getHeight(jqo) {\n        return jqo.height();\n      };\n    } // setup defaults if arguments aren't specified\n\n\n    if (arguments.length < 1 || xpos === null) xpos = \"50%\";\n    if (arguments.length < 2 || speedFactor === null) speedFactor = 0.1;\n    if (arguments.length < 3 || outerHeight === null) outerHeight = true; // function to be called whenever the window is scrolled or resized\n\n    function update() {\n      var pos = $window.scrollTop();\n      $this.each(function () {\n        var $element = $(this);\n        var top = $element.offset().top;\n        var height = getHeight($element); // Check if totally above or totally below viewport\n\n        if (top + height < pos || top > pos + windowHeight) {\n          return;\n        }\n\n        $this.css('backgroundPosition', xpos + \" \" + Math.round((firstTop - pos) * speedFactor) + \"px\");\n      });\n    }\n\n    $window.bind('scroll', update).resize(update);\n    update();\n  };\n});","map":null,"metadata":{},"sourceType":"script"}