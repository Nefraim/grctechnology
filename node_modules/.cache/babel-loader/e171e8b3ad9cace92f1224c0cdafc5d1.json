{"ast":null,"code":"import _classCallCheck from \"/home/canocalir/grcwebsite/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/canocalir/grcwebsite/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/canocalir/grcwebsite/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/canocalir/grcwebsite/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/canocalir/grcwebsite/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/canocalir/grcwebsite/src/components/HomeHeader/HomeHeader.jsx\";\nimport React, { Component } from 'react';\nimport './HomeHeader.sass';\nimport $ from 'jquery';\n\nvar HomeHeader =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(HomeHeader, _Component);\n\n  function HomeHeader() {\n    _classCallCheck(this, HomeHeader);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(HomeHeader).apply(this, arguments));\n  }\n\n  _createClass(HomeHeader, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var particles = [];\n      var frequency = 20; // Popolate particles\n\n      setInterval(function () {\n        popolate();\n      }.bind(this), frequency);\n      var c1 = createCanvas({\n        width: $(window).width(),\n        height: $(window).height()\n      });\n      var c2 = createCanvas({\n        width: $(window).width(),\n        height: $(window).height()\n      });\n      var c3 = createCanvas({\n        width: $(window).width(),\n        height: $(window).height()\n      });\n      var tela = c1.canvas;\n      var canvas = c1.context; // $(\"body\").append(tela);\n\n      $(\"body\").append(c3.canvas);\n      writeText(c2.canvas, c2.context, \"PARTICLES\\nWRITE\\nTEXT\");\n\n      var Particle =\n      /*#__PURE__*/\n      function () {\n        function Particle(canvas, options) {\n          _classCallCheck(this, Particle);\n\n          var random = Math.random();\n          this.canvas = canvas;\n          this.x = options.x;\n          this.y = options.y;\n          this.s = 3 + Math.random();\n          this.a = 0;\n          this.w = $(window).width();\n          this.h = $(window).height();\n          this.radius = 0.5 + Math.random() * 20;\n          this.color = this.radius > 5 ? \"#FF5E4C\" : \"#ED413C\"; //this.randomColor()\n        }\n\n        _createClass(Particle, [{\n          key: \"randomColor\",\n          value: function randomColor() {\n            var colors = [\"#FF5E4C\", \"#FFFFFF\"];\n            return colors[this.randomIntFromInterval(0, colors.length - 1)];\n          }\n        }, {\n          key: \"randomIntFromInterval\",\n          value: function randomIntFromInterval(min, max) {\n            return Math.floor(Math.random() * (max - min + 1) + min);\n          }\n        }, {\n          key: \"render\",\n          value: function render() {\n            this.canvas.beginPath();\n            this.canvas.arc(this.x, this.y, this.radius, 0, 2 * Math.PI);\n            this.canvas.lineWidth = 2;\n            this.canvas.fillStyle = this.color;\n            this.canvas.fill();\n            this.canvas.closePath();\n          }\n        }, {\n          key: \"move\",\n          value: function move() {\n            //this.swapColor()\n            this.x += Math.cos(this.a) * this.s;\n            this.y += Math.sin(this.a) * this.s;\n            this.a += Math.random() * 0.8 - 0.4;\n\n            if (this.x < 0 || this.x > this.w - this.radius) {\n              return false;\n            }\n\n            if (this.y < 0 || this.y > this.h - this.radius) {\n              return false;\n            }\n\n            this.render();\n            return true;\n          }\n        }]);\n\n        return Particle;\n      }();\n\n      function createCanvas(properties) {\n        var canvas = document.createElement('canvas');\n        canvas.width = properties.width;\n        canvas.height = properties.height;\n        var context = canvas.getContext('2d');\n        return {\n          canvas: canvas,\n          context: context\n        };\n      }\n\n      function writeText(canvas, context, text) {\n        var size = 100;\n        context.font = size + \"px Montserrat\";\n        context.fillStyle = \"#111111\";\n        context.textAlign = \"center\";\n        var lineheight = 70;\n        var lines = text.split('\\n');\n\n        for (var i = 0; i < lines.length; i++) {\n          context.fillText(lines[i], canvas.width / 2, canvas.height / 2 + lineheight * i - lineheight * (lines.length - 1) / 3);\n        }\n      }\n\n      function maskCanvas() {\n        c3.context.drawImage(c2.canvas, 0, 0, c2.canvas.width, c2.canvas.height);\n        c3.context.globalCompositeOperation = 'source-atop';\n        c3.context.drawImage(c1.canvas, 0, 0);\n        blur(c1.context, c1.canvas, 2);\n      }\n\n      function blur(ctx, canvas, amt) {\n        ctx.filter = \"blur(\".concat(amt, \"px)\");\n        ctx.drawImage(canvas, 0, 0);\n        ctx.filter = 'none';\n      }\n      /*\n       * Function to clear layer canvas\n       * @num:number number of particles\n       */\n\n\n      function popolate() {\n        particles.push(new Particle(canvas, {\n          x: $(window).width() / 2,\n          y: $(window).height() / 2\n        }));\n        return particles.length;\n      }\n\n      function clear() {\n        canvas.globalAlpha = 0.03;\n        canvas.fillStyle = '#111111';\n        canvas.fillRect(0, 0, tela.width, tela.height);\n        canvas.globalAlpha = 1;\n      }\n\n      function update() {\n        clear();\n        particles = particles.filter(function (p) {\n          return p.move();\n        });\n        maskCanvas();\n        requestAnimationFrame(update.bind(this));\n      }\n\n      update();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }, \"A N O T H E R \", React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }, \"C O D E P E N\"))), React.createElement(\"div\", {\n        className: \"more-pens\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        target: \"_blank\",\n        href: \"https://codepen.io/plasm/\",\n        className: \"white-mode\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }, \"VIEW OTHER PENS\"), React.createElement(\"a\", {\n        target: \"_blank\",\n        href: \"https://codepen.io/collection/nZpPbz/\",\n        className: \"white-mode\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }, \"VIEW OTHER PARTICLES\")));\n    }\n  }]);\n\n  return HomeHeader;\n}(Component);\n\nexport { HomeHeader as default };","map":{"version":3,"sources":["/home/canocalir/grcwebsite/src/components/HomeHeader/HomeHeader.jsx"],"names":["React","Component","$","HomeHeader","particles","frequency","setInterval","popolate","bind","c1","createCanvas","width","window","height","c2","c3","tela","canvas","context","append","writeText","Particle","options","random","Math","x","y","s","a","w","h","radius","color","colors","randomIntFromInterval","length","min","max","floor","beginPath","arc","PI","lineWidth","fillStyle","fill","closePath","cos","sin","render","properties","document","createElement","getContext","text","size","font","textAlign","lineheight","lines","split","i","fillText","maskCanvas","drawImage","globalCompositeOperation","blur","ctx","amt","filter","push","clear","globalAlpha","fillRect","update","p","move","requestAnimationFrame"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,mBAAP;AACA,OAAOC,CAAP,MAAc,QAAd;;IAEqBC,U;;;;;;;;;;;;;wCACG;AAChB,UAAIC,SAAS,GAAG,EAAhB;AACA,UAAIC,SAAS,GAAG,EAAhB,CAFgB,CAGhB;;AACAC,MAAAA,WAAW,CACT,YAAU;AACRC,QAAAA,QAAQ;AACT,OAFD,CAEEC,IAFF,CAEO,IAFP,CADS,EAITH,SAJS,CAAX;AAOA,UAAII,EAAE,GAAGC,YAAY,CAAC;AAACC,QAAAA,KAAK,EAAET,CAAC,CAACU,MAAD,CAAD,CAAUD,KAAV,EAAR;AAA2BE,QAAAA,MAAM,EAAEX,CAAC,CAACU,MAAD,CAAD,CAAUC,MAAV;AAAnC,OAAD,CAArB;AACA,UAAIC,EAAE,GAAGJ,YAAY,CAAC;AAACC,QAAAA,KAAK,EAAET,CAAC,CAACU,MAAD,CAAD,CAAUD,KAAV,EAAR;AAA2BE,QAAAA,MAAM,EAAEX,CAAC,CAACU,MAAD,CAAD,CAAUC,MAAV;AAAnC,OAAD,CAArB;AACA,UAAIE,EAAE,GAAGL,YAAY,CAAC;AAACC,QAAAA,KAAK,EAAET,CAAC,CAACU,MAAD,CAAD,CAAUD,KAAV,EAAR;AAA2BE,QAAAA,MAAM,EAAEX,CAAC,CAACU,MAAD,CAAD,CAAUC,MAAV;AAAnC,OAAD,CAArB;AAEA,UAAIG,IAAI,GAAKP,EAAE,CAACQ,MAAhB;AACA,UAAIA,MAAM,GAAGR,EAAE,CAACS,OAAhB,CAhBgB,CAkBhB;;AACAhB,MAAAA,CAAC,CAAC,MAAD,CAAD,CAAUiB,MAAV,CAAiBJ,EAAE,CAACE,MAApB;AACAG,MAAAA,SAAS,CAACN,EAAE,CAACG,MAAJ,EAAYH,EAAE,CAACI,OAAf,EAAwB,wBAAxB,CAAT;;AApBgB,UAuBVG,QAvBU;AAAA;AAAA;AAwBd,0BAAYJ,MAAZ,EAAoBK,OAApB,EAA4B;AAAA;;AAC1B,cAAIC,MAAM,GAAGC,IAAI,CAACD,MAAL,EAAb;AACA,eAAKN,MAAL,GAAcA,MAAd;AACA,eAAKQ,CAAL,GAASH,OAAO,CAACG,CAAjB;AACA,eAAKC,CAAL,GAASJ,OAAO,CAACI,CAAjB;AACA,eAAKC,CAAL,GAAU,IAAIH,IAAI,CAACD,MAAL,EAAd;AACA,eAAKK,CAAL,GAAS,CAAT;AACA,eAAKC,CAAL,GAAS3B,CAAC,CAACU,MAAD,CAAD,CAAUD,KAAV,EAAT;AACA,eAAKmB,CAAL,GAAS5B,CAAC,CAACU,MAAD,CAAD,CAAUC,MAAV,EAAT;AACA,eAAKkB,MAAL,GAAc,MAAMP,IAAI,CAACD,MAAL,KAAc,EAAlC;AACA,eAAKS,KAAL,GAAc,KAAKD,MAAL,GAAc,CAAd,GAAkB,SAAlB,GAA8B,SAA5C,CAV0B,CAU4B;AACvD;;AAnCa;AAAA;AAAA,wCAqCA;AACZ,gBAAIE,MAAM,GAAG,CAAC,SAAD,EAAY,SAAZ,CAAb;AACA,mBAAOA,MAAM,CAAC,KAAKC,qBAAL,CAA2B,CAA3B,EAA6BD,MAAM,CAACE,MAAP,GAAc,CAA3C,CAAD,CAAb;AACD;AAxCa;AAAA;AAAA,gDA0CQC,GA1CR,EA0CYC,GA1CZ,EA0CgB;AAC1B,mBAAOb,IAAI,CAACc,KAAL,CAAWd,IAAI,CAACD,MAAL,MAAec,GAAG,GAACD,GAAJ,GAAQ,CAAvB,IAA0BA,GAArC,CAAP;AACH;AA5Ca;AAAA;AAAA,mCA8CN;AACN,iBAAKnB,MAAL,CAAYsB,SAAZ;AACA,iBAAKtB,MAAL,CAAYuB,GAAZ,CAAgB,KAAKf,CAArB,EAAwB,KAAKC,CAA7B,EAAgC,KAAKK,MAArC,EAA6C,CAA7C,EAAgD,IAAIP,IAAI,CAACiB,EAAzD;AACA,iBAAKxB,MAAL,CAAYyB,SAAZ,GAAwB,CAAxB;AACA,iBAAKzB,MAAL,CAAY0B,SAAZ,GAAwB,KAAKX,KAA7B;AACA,iBAAKf,MAAL,CAAY2B,IAAZ;AACA,iBAAK3B,MAAL,CAAY4B,SAAZ;AACD;AArDa;AAAA;AAAA,iCAuDR;AACJ;AACA,iBAAKpB,CAAL,IAAUD,IAAI,CAACsB,GAAL,CAAS,KAAKlB,CAAd,IAAmB,KAAKD,CAAlC;AACA,iBAAKD,CAAL,IAAUF,IAAI,CAACuB,GAAL,CAAS,KAAKnB,CAAd,IAAmB,KAAKD,CAAlC;AACA,iBAAKC,CAAL,IAAUJ,IAAI,CAACD,MAAL,KAAgB,GAAhB,GAAsB,GAAhC;;AAEA,gBAAG,KAAKE,CAAL,GAAS,CAAT,IAAc,KAAKA,CAAL,GAAS,KAAKI,CAAL,GAAS,KAAKE,MAAxC,EAA+C;AAC7C,qBAAO,KAAP;AACD;;AAED,gBAAG,KAAKL,CAAL,GAAS,CAAT,IAAc,KAAKA,CAAL,GAAS,KAAKI,CAAL,GAAS,KAAKC,MAAxC,EAA+C;AAC7C,qBAAO,KAAP;AACD;;AACD,iBAAKiB,MAAL;AACA,mBAAO,IAAP;AACD;AAtEa;;AAAA;AAAA;;AAyEhB,eAAStC,YAAT,CAAsBuC,UAAtB,EAAiC;AAC/B,YAAIhC,MAAM,GAAGiC,QAAQ,CAACC,aAAT,CAAuB,QAAvB,CAAb;AACIlC,QAAAA,MAAM,CAACN,KAAP,GAAesC,UAAU,CAACtC,KAA1B;AACAM,QAAAA,MAAM,CAACJ,MAAP,GAAgBoC,UAAU,CAACpC,MAA3B;AACJ,YAAIK,OAAO,GAAGD,MAAM,CAACmC,UAAP,CAAkB,IAAlB,CAAd;AACA,eAAO;AACLnC,UAAAA,MAAM,EAAEA,MADH;AAELC,UAAAA,OAAO,EAAEA;AAFJ,SAAP;AAID;;AAED,eAASE,SAAT,CAAmBH,MAAnB,EAA2BC,OAA3B,EAAoCmC,IAApC,EAAyC;AACvC,YAAIC,IAAI,GAAG,GAAX;AACApC,QAAAA,OAAO,CAACqC,IAAR,GAAeD,IAAI,GAAG,eAAtB;AACApC,QAAAA,OAAO,CAACyB,SAAR,GAAoB,SAApB;AACAzB,QAAAA,OAAO,CAACsC,SAAR,GAAoB,QAApB;AACA,YAAIC,UAAU,GAAG,EAAjB;AACA,YAAIC,KAAK,GAAGL,IAAI,CAACM,KAAL,CAAW,IAAX,CAAZ;;AACA,aAAI,IAAIC,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAACF,KAAK,CAACvB,MAAvB,EAA+ByB,CAAC,EAAhC,EAAmC;AACjC1C,UAAAA,OAAO,CAAC2C,QAAR,CAAiBH,KAAK,CAACE,CAAD,CAAtB,EAA2B3C,MAAM,CAACN,KAAP,GAAa,CAAxC,EAA2CM,MAAM,CAACJ,MAAP,GAAc,CAAd,GAAkB4C,UAAU,GAACG,CAA7B,GAAkCH,UAAU,IAAEC,KAAK,CAACvB,MAAN,GAAa,CAAf,CAAX,GAA8B,CAA1G;AACD;AACF;;AAED,eAAS2B,UAAT,GAAqB;AACnB/C,QAAAA,EAAE,CAACG,OAAH,CAAW6C,SAAX,CAAqBjD,EAAE,CAACG,MAAxB,EAAgC,CAAhC,EAAmC,CAAnC,EAAsCH,EAAE,CAACG,MAAH,CAAUN,KAAhD,EAAuDG,EAAE,CAACG,MAAH,CAAUJ,MAAjE;AACAE,QAAAA,EAAE,CAACG,OAAH,CAAW8C,wBAAX,GAAsC,aAAtC;AACAjD,QAAAA,EAAE,CAACG,OAAH,CAAW6C,SAAX,CAAqBtD,EAAE,CAACQ,MAAxB,EAAgC,CAAhC,EAAmC,CAAnC;AACAgD,QAAAA,IAAI,CAACxD,EAAE,CAACS,OAAJ,EAAYT,EAAE,CAACQ,MAAf,EAAuB,CAAvB,CAAJ;AACD;;AAED,eAASgD,IAAT,CAAcC,GAAd,EAAkBjD,MAAlB,EAA0BkD,GAA1B,EAA+B;AAC7BD,QAAAA,GAAG,CAACE,MAAJ,kBAAqBD,GAArB;AACAD,QAAAA,GAAG,CAACH,SAAJ,CAAc9C,MAAd,EAAsB,CAAtB,EAAyB,CAAzB;AACAiD,QAAAA,GAAG,CAACE,MAAJ,GAAa,MAAb;AACD;AAGD;;;;;;AAIA,eAAS7D,QAAT,GAAmB;AACjBH,QAAAA,SAAS,CAACiE,IAAV,CACE,IAAIhD,QAAJ,CAAaJ,MAAb,EAAoB;AAClBQ,UAAAA,CAAC,EAAGvB,CAAC,CAACU,MAAD,CAAD,CAAUD,KAAV,KAAkB,CADJ;AAElBe,UAAAA,CAAC,EAAGxB,CAAC,CAACU,MAAD,CAAD,CAAUC,MAAV,KAAmB;AAFL,SAApB,CADF;AAMA,eAAOT,SAAS,CAAC+B,MAAjB;AACD;;AAED,eAASmC,KAAT,GAAgB;AACdrD,QAAAA,MAAM,CAACsD,WAAP,GAAmB,IAAnB;AACAtD,QAAAA,MAAM,CAAC0B,SAAP,GAAiB,SAAjB;AACA1B,QAAAA,MAAM,CAACuD,QAAP,CAAgB,CAAhB,EAAmB,CAAnB,EAAsBxD,IAAI,CAACL,KAA3B,EAAkCK,IAAI,CAACH,MAAvC;AACAI,QAAAA,MAAM,CAACsD,WAAP,GAAmB,CAAnB;AACD;;AAED,eAASE,MAAT,GAAiB;AACfH,QAAAA,KAAK;AACLlE,QAAAA,SAAS,GAAGA,SAAS,CAACgE,MAAV,CAAiB,UAASM,CAAT,EAAY;AACvC,iBAAOA,CAAC,CAACC,IAAF,EAAP;AACD,SAFW,CAAZ;AAGAb,QAAAA,UAAU;AACVc,QAAAA,qBAAqB,CAACH,MAAM,CAACjE,IAAP,CAAY,IAAZ,CAAD,CAArB;AACD;;AAEDiE,MAAAA,MAAM;AAET;;;6BACM;AACP,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAAlB,CADF,CADA,EAIA;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAG,QAAA,MAAM,EAAC,QAAV;AAAmB,QAAA,IAAI,EAAC,2BAAxB;AAAoD,QAAA,SAAS,EAAC,YAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADF,EAEE;AAAG,QAAA,MAAM,EAAC,QAAV;AAAmB,QAAA,IAAI,EAAC,uCAAxB;AAAgE,QAAA,SAAS,EAAC,YAA1E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAFF,CAJA,CADJ;AAWD;;;;EA5JqCxE,S;;SAAnBE,U","sourcesContent":["import React, { Component } from 'react';\nimport './HomeHeader.sass';\nimport $ from 'jquery';\n\nexport default class HomeHeader extends Component {\n    componentDidMount() {\n        let particles = [];\n        let frequency = 20\n        // Popolate particles\n        setInterval(\n          function(){\n            popolate()\n          }.bind(this),\n          frequency\n        )\n        \n        let c1 = createCanvas({width: $(window).width(), height: $(window).height()})\n        let c2 = createCanvas({width: $(window).width(), height: $(window).height()})\n        let c3 = createCanvas({width: $(window).width(), height: $(window).height()})\n        \n        let tela   = c1.canvas;\n        let canvas = c1.context;\n        \n        // $(\"body\").append(tela);\n        $(\"body\").append(c3.canvas);\n        writeText(c2.canvas, c2.context, \"PARTICLES\\nWRITE\\nTEXT\")\n        \n        \n        class Particle{\n          constructor(canvas, options){\n            let random = Math.random()\n            this.canvas = canvas;\n            this.x = options.x\n            this.y = options.y\n            this.s = (3 + Math.random());\n            this.a = 0\n            this.w = $(window).width()\n            this.h = $(window).height()\n            this.radius = 0.5 + Math.random()*20\n            this.color  = this.radius > 5 ? \"#FF5E4C\" : \"#ED413C\" //this.randomColor()\n          }\n        \n          randomColor() {\n            let colors = [\"#FF5E4C\", \"#FFFFFF\"];\n            return colors[this.randomIntFromInterval(0,colors.length-1)];\n          }\n        \n          randomIntFromInterval(min,max){\n              return Math.floor(Math.random()*(max-min+1)+min);\n          }\n        \n          render(){\n            this.canvas.beginPath();\n            this.canvas.arc(this.x, this.y, this.radius, 0, 2 * Math.PI);\n            this.canvas.lineWidth = 2;\n            this.canvas.fillStyle = this.color;\n            this.canvas.fill();\n            this.canvas.closePath();\n          }\n        \n          move(){\n            //this.swapColor()\n            this.x += Math.cos(this.a) * this.s;\n            this.y += Math.sin(this.a) * this.s;\n            this.a += Math.random() * 0.8 - 0.4;\n        \n            if(this.x < 0 || this.x > this.w - this.radius){\n              return false\n            }\n        \n            if(this.y < 0 || this.y > this.h - this.radius){\n              return false\n            }\n            this.render()\n            return true\n          }\n        }\n        \n        function createCanvas(properties){\n          let canvas = document.createElement('canvas');\n              canvas.width = properties.width;\n              canvas.height = properties.height;\n          let context = canvas.getContext('2d');\n          return {\n            canvas: canvas,\n            context: context\n          }\n        }\n        \n        function writeText(canvas, context, text){\n          let size = 100\n          context.font = size + \"px Montserrat\";\n          context.fillStyle = \"#111111\";\n          context.textAlign = \"center\";\n          let lineheight = 70\n          let lines = text.split('\\n');\n          for(let i = 0; i<lines.length; i++){\n            context.fillText(lines[i], canvas.width/2, canvas.height/2 + lineheight*i - (lineheight*(lines.length-1))/3);\n          }\n        }\n        \n        function maskCanvas(){\n          c3.context.drawImage(c2.canvas, 0, 0, c2.canvas.width, c2.canvas.height);\n          c3.context.globalCompositeOperation = 'source-atop';\n          c3.context.drawImage(c1.canvas, 0, 0);\n          blur(c1.context,c1.canvas, 2)\n        }\n        \n        function blur(ctx,canvas, amt) {\n          ctx.filter = `blur(${amt}px)`\n          ctx.drawImage(canvas, 0, 0)\n          ctx.filter = 'none'\n        }\n        \n        \n        /*\n         * Function to clear layer canvas\n         * @num:number number of particles\n         */\n        function popolate(){\n          particles.push(\n            new Particle(canvas,{\n              x: ($(window).width()/2),\n              y: ($(window).height()/2)\n            })\n          )\n          return particles.length\n        }\n        \n        function clear(){\n          canvas.globalAlpha=0.03;\n          canvas.fillStyle='#111111';\n          canvas.fillRect(0, 0, tela.width, tela.height);\n          canvas.globalAlpha=1;\n        }\n        \n        function update(){\n          clear();\n          particles = particles.filter(function(p) {\n            return p.move()\n          })\n          maskCanvas()\n          requestAnimationFrame(update.bind(this))\n        }\n        \n        update()\n         \n    }\n  render() {\n    return (\n        <div>\n        <div className=\"title\">\n          <h3>A N O T H E R <strong>C O D E P E N</strong></h3>\n        </div>\n        <div className=\"more-pens\">\n          <a target=\"_blank\" href=\"https://codepen.io/plasm/\" className=\"white-mode\">VIEW OTHER PENS</a>\n          <a target=\"_blank\" href=\"https://codepen.io/collection/nZpPbz/\" className=\"white-mode\">VIEW OTHER PARTICLES</a>\n        </div>\n      </div>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}